CREATE PROCEDURE sub_RealizarCierreSemanal
    @FechaOperacion DATE
AS
BEGIN
    SET NOCOUNT ON;

    -- Determinar IdSemana
    DECLARE @IdSemana INT;

    SELECT TOP 1 @IdSemana = Id
    FROM SemanasPlanilla
    WHERE @FechaOperacion BETWEEN FechaInicio AND FechaFin;

    IF @IdSemana IS NULL RETURN;

    -- Determinar IdMes y si es de 4 o 5 semanas
    DECLARE @IdMes INT, @SemanasEnMes INT;

    SELECT @IdMes = IdMes FROM SemanasPlanilla WHERE Id = @IdSemana;

    SELECT @SemanasEnMes = COUNT(*) FROM SemanasPlanilla WHERE IdMes = @IdMes;

    -- Procesar cada empleado con planilla semanal
    DECLARE EmpleadosCursor CURSOR FOR
        SELECT pse.IdEmpleado, pse.SalarioBruto
        FROM PlanillaSemanalEmpleado pse
        WHERE pse.IdSemana = @IdSemana;

    DECLARE @IdEmpleado INT, @SalarioBruto DECIMAL(25,2), @TotalDeducciones DECIMAL(25,2), @SalarioNeto DECIMAL(25,2);
    DECLARE @MontoDeduccion DECIMAL(25,2), @MontoFijoMensual DECIMAL(10,4), @MontoAplicado DECIMAL(10,4);
    DECLARE @IdTipoDeduccion INT, @NombreTipo VARCHAR(100), @EsPorcentual BIT, @EsObligatorio BIT;

    OPEN EmpleadosCursor;
    FETCH NEXT FROM EmpleadosCursor INTO @IdEmpleado, @SalarioBruto;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        SET @TotalDeducciones = 0;

        -- 1. Deducciones porcentuales activas
        DECLARE Porcentuales CURSOR FOR
            SELECT td.Id, td.Nombre, td.Valor
            FROM EmpleadosDeduccion ed
            JOIN TiposDeduccion td ON td.Id = ed.IdTipoDeduccion
            WHERE ed.IdEmpleado = @IdEmpleado
              AND td.Porcentual = 1
              AND ed.FechaDesasociacion IS NULL;

        OPEN Porcentuales;
        FETCH NEXT FROM Porcentuales INTO @IdTipoDeduccion, @NombreTipo, @MontoAplicado;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @MontoDeduccion = ROUND(@SalarioBruto * @MontoAplicado, 2);
            SET @TotalDeducciones += @MontoDeduccion;

            INSERT INTO Movimiento (IdEmpleado, IdSemana, Fecha, TipoMovimiento, CategoriaMovimiento, Monto, Fuente)
            VALUES (@IdEmpleado, @IdSemana, @FechaOperacion, 'Deducción', @NombreTipo, @MontoDeduccion, NULL, 'Deducción');

            FETCH NEXT FROM Porcentuales INTO @IdTipoDeduccion, @NombreTipo, @MontoAplicado;
        END

        CLOSE Porcentuales;
        DEALLOCATE Porcentuales;

        -- 2. Deducciones fijas activas
        DECLARE Fijas CURSOR FOR
            SELECT td.Id, td.Nombre, ed.MontoFijo
            FROM EmpleadosDeduccion ed
            JOIN TiposDeduccion td ON td.Id = ed.IdTipoDeduccion
            WHERE ed.IdEmpleado = @IdEmpleado
              AND td.Porcentual = 0
              AND td.Obligatorio = 0
              AND ed.FechaDesasociacion IS NULL;

        OPEN Fijas;
        FETCH NEXT FROM Fijas INTO @IdTipoDeduccion, @NombreTipo, @MontoFijoMensual;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @MontoDeduccion = ROUND(@MontoFijoMensual / @SemanasEnMes, 2);
            SET @TotalDeducciones += @MontoDeduccion;

            INSERT INTO Movimiento (IdEmpleado, IdSemana, Fecha, TipoMovimiento, CategoriaMovimiento, Monto, Fuente)
            VALUES (@IdEmpleado, @IdSemana, @FechaOperacion, 'Deducción', @NombreTipo, @MontoDeduccion, NULL, 'Deducción');

            FETCH NEXT FROM Fijas INTO @IdTipoDeduccion, @NombreTipo, @MontoFijoMensual;
        END

        CLOSE Fijas;
        DEALLOCATE Fijas;

        -- 3. Calcular salario neto
        SET @SalarioNeto = @SalarioBruto - @TotalDeducciones;

        UPDATE PlanillaSemanalEmpleado
        SET TotalDeducciones = @TotalDeducciones,
            SalarioNeto = @SalarioNeto
        WHERE IdEmpleado = @IdEmpleado AND IdSemana = @IdSemana;

        -- 4. Acumular en planilla mensual
        DECLARE @IdPlanillaMensual INT;

        SELECT @IdPlanillaMensual = Id
        FROM PlanillaMensualEmpleado
        WHERE IdEmpleado = @IdEmpleado AND IdMes = @IdMes;

        IF @IdPlanillaMensual IS NULL
        BEGIN
            INSERT INTO PlanillaMensualEmpleado (IdEmpleado, IdMes, SalarioBruto, TotalDeducciones, SalarioNeto)
            VALUES (@IdEmpleado, @IdMes, @SalarioBruto, @TotalDeducciones, @SalarioNeto);

            SET @IdPlanillaMensual = SCOPE_IDENTITY();
        END
        ELSE
        BEGIN
            UPDATE PlanillaMensualEmpleado
            SET SalarioBruto = SalarioBruto + @SalarioBruto,
                TotalDeducciones = TotalDeducciones + @TotalDeducciones,
                SalarioNeto = SalarioNeto + @SalarioNeto
            WHERE Id = @IdPlanillaMensual;
        END

        -- 5. Insertar detalle mensual de deducciones fijas
        INSERT INTO DeduccionesMensualesEmpleado (IdPlanillaMensual, IdTipoDeduccion, Monto)
        SELECT 
            @IdPlanillaMensual, td.Id, ROUND(ed.MontoFijo / @SemanasEnMes, 2)
        FROM EmpleadosDeduccion ed
        JOIN TiposDeduccion td ON td.Id = ed.IdTipoDeduccion
        WHERE ed.IdEmpleado = @IdEmpleado AND td.Porcentual = 0 AND td.Obligatorio = 0 AND ed.FechaDesasociacion IS NULL;

        FETCH NEXT FROM EmpleadosCursor INTO @IdEmpleado, @SalarioBruto;
    END

    CLOSE EmpleadosCursor;
    DEALLOCATE EmpleadosCursor;

    -- Cierre lógico de la semana
    UPDATE SemanasPlanilla SET Cerrada = 1 WHERE Id = @IdSemana;
END;
