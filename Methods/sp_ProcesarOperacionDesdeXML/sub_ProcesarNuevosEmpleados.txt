CREATE PROCEDURE sub_ProcesarNuevosEmpleados
    @XmlOperacion XML,
    @FechaOperacion DATE
AS
BEGIN
    SET NOCOUNT ON;

    -- Extraer empleados de la fecha actual
    WITH EmpleadosNuevos AS (
        SELECT 
            e.value('@Nombre', 'VARCHAR(100)') AS Nombre,
            e.value('@IdTipoDocumento', 'INT') AS IdTipoDocumento,
            e.value('@ValorTipoDocumento', 'VARCHAR(64)') AS ValorDocumento,
            e.value('@IdDepartamento', 'INT') AS IdDepartamento,
            e.value('@NombrePuesto', 'VARCHAR(100)') AS NombrePuesto,
            e.value('@Usuario', 'VARCHAR(64)') AS Usuario,
            e.value('@Password', 'VARCHAR(100)') AS Password
        FROM @XmlOperacion.nodes('OperacionFechaOperacion[@Fecha=sqlvariable(@FechaOperacion)]NuevosEmpleadosNuevoEmpleado') AS T(e)
    )
    -- Inserta los puestos si no existen
    INSERT INTO Puesto (Nombre, SalarioXHora)
    SELECT DISTINCT en.NombrePuesto, 0.00 -- Por defecto, se puede actualizar luego
    FROM EmpleadosNuevos en
    WHERE NOT EXISTS (
        SELECT 1 FROM Puesto p WHERE p.Nombre = en.NombrePuesto
    );

    -- Inserta los usuarios
    INSERT INTO Usuario (Username, Password, Tipo)
    SELECT en.Usuario, en.Password, 3 -- Tipo 3 por defecto empleado
    FROM EmpleadosNuevos en
    WHERE NOT EXISTS (
        SELECT 1 FROM Usuario u WHERE u.Username = en.Usuario
    );

    -- Inserta empleados
    INSERT INTO Empleado (Nombre, IdTipoDocumento, ValorDocumento, FechaNacimiento, IdDepartamento, IdPuesto, IdUsuario, Activo)
    SELECT 
        en.Nombre,
        en.IdTipoDocumento,
        en.ValorDocumento,
        '1990-01-01', -- FechaNacimiento por defecto
        en.IdDepartamento,
        p.Id,
        u.Id,
        1
    FROM EmpleadosNuevos en
    INNER JOIN Puesto p ON p.Nombre = en.NombrePuesto
    INNER JOIN Usuario u ON u.Username = en.Usuario
    WHERE NOT EXISTS (
        SELECT 1 FROM Empleado emp WHERE emp.ValorDocumento = en.ValorDocumento
    );

END;
